@using DataAccessLibrary.Models
@using DataAccessLibrary
@using Majorsoft.Blazor.Components.Loading

@inject IRecipeData Data
@inject RecipeState State
@inject IJSRuntime JsRuntime
@page "/AdminRecipe"

<div @onkeypress="CheckEscape">
    <PageTitle>@title</PageTitle>
    <h3>Recipe Management</h3>
    <button onclick="@(() => State.ShowCreateDialog(createRecipe))"
            class="btn btn-primary">Create a new Recipe</Button>

    @if (State.RecipeList == null)
        {<LoadingPage OnLoading="@LoadPageData">
            <LoadingContent>
                <i class="fa fa-spinner fa-3x fa-spin"></i> 
                <h2 class="m-3">Loading...</h2>
            </LoadingContent>
         </LoadingPage>
    }
    else
    {
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Name</th>
                <th>Calorie</th>
                <th>Image</th>
                <th>Tags</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in State.RecipeList)
            {
                <tr>
                    <th>@item.Name</th>
                    <th>@item.Calorie</th>
                    <th><img src="@item.Image" alt="@item.Name" width="200"/></th>


                    <th >

                        @if (item.TagList != null && item.TagList.Any())
                        {
                            <ul class="">

                                @foreach (var tag in item.TagList)
                                {
                                    if (tag != null)
                                    {
                                        <li class="">@tag.Tag</li>
                                    }


                                }
                            </ul>
                        }
                        else
                        {
                            <p> no tags </p>
                        }
                    </th>

                </tr>
            }
            </tbody>
        </table>
    }
</div>


<TemplatedDialog Show="State.ShowDialog">
    <CreateRecipeDialog
        Recipe="State.NewRecipe"
        OnCancel="State.RemoveDialog"
        OnConfirm="State.ConfirmRecipe"/>

</TemplatedDialog>

@code {

    private string title = "Recipe Management";
    private CreateRecipe createRecipe { get; set; } = new CreateRecipe();

    protected override async Task OnInitializedAsync()
    {
        State.RecipeList = await Data.GetRecipeList();
        base.OnInitializedAsync();
    }

    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    await JsRuntime.InvokeVoidAsync("setTitle", "Recipe Management");
    //}

    private void CheckEscape(KeyboardEventArgs args)
       {
           Console.WriteLine(args.Key);
           Console.WriteLine(args.Code);
       }
    private async Task LoadPageData()
    {
        await Task.Delay(1500); //write your code here... Component uses Try/Finally internally.
    }
   }
