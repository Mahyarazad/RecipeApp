
@using DataAccessLibrary


@inject IRecipeData Data
@inject RecipeState State
@inject IJSRuntime JsRuntime
@page "/AdminRecipe"


    <PageTitle>@title</PageTitle>
    <h3>Recipe Management</h3>
        <Tooltip Text="Add a new recipe">
        <button @onclick="() => State.ShowRecipeDialog(Guid.Empty)"
                class="btn btn-primary">
            Create a new Recipe
        </button>
    </Tooltip>

    @if (State.RecipeList == null)
    {
        <text>Loading...</text>
    }
    else
    {
        <div class="table-responsive-sm">
        <table class="table table-striped ">
            <thead>
            <tr>
                <th>Name</th>
                <th>Calorie</th>
                <th>Image</th>
                <th>Tags</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in State.RecipeList)
            {
                <tr>
                    <th>@item.Name</th>
                    <th>@item.Calorie</th>
                    <th>
                        <img src="@item.Image" alt="@item.Name" width="50" class="img-thumbnail"/>
                    </th>

                    <th >
                        @if (item.TagList != null && item.TagList.Any())
                        {
                            <ul class="">
                                @foreach (var tag in item.TagList.Where(tag => tag != null))
                                {
                                    <li class="">@tag.Tag</li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p> no tags </p>
                        }
                    </th>
                    <th>
                        <Tooltip Text="@ApplicationMessages.ModifyRecipeButton">
                            <button @onclick="() => State.ShowRecipeDialog(item.Id)"
                                    class="btn btn-primary">
                                Edit
                            </button>
                        </Tooltip>
                        <Tooltip Text="@ApplicationMessages.DeleteRecipeButton">
                            <button class="btn btn-danger"
                                    @onclick="() => { DeleteRecipeCheck(item.Id, item.TagList.Where(tag => tag != null).Select(tags => tags.TagId).ToList()); }">
                                Delete
                            </button>
                        </Tooltip>
                    </th>
                </tr>
            }
            </tbody>
        </table>
        </div>
    }

<TemplatedDialog Show="@State.ShowDialogCreate">

    <RecipeDialog
        Recipe="State.NewRecipe"
        OnCancel="State.RemoveDialog"
        OnConfirm="State.ConfirmRecipe"/>

</TemplatedDialog>


@code {

    private string title = "Recipe Management";


    protected override async Task OnInitializedAsync()
    {
        State.RecipeList = await Data.GetRecipeList();
        await base.OnInitializedAsync();
    }

    //prompt the user on deletion request

    private async Task DeleteRecipeCheck(Guid id, List<Guid> tagIdList )
    {
        if (await JsRuntime.InvokeAsync<bool>("DeleteTagPrompt", tagIdList))
            State.DeleteRecipe(id, tagIdList);
        StateHasChanged();
    }
}
